doctype html 
html(lang='en')
    include ../components/head.pug
    //- include ../config.pug
    body 
        include ../components/header.pug
        section.blog-inner.container 
            .blog-inner__autor
                img(src="/assets/img/person2.svg" alt="author's photo")
                p.text Andrew Jonson 
                span.location posted on
                    span 27th January 2021
            .border 
            h2.heading-secondary How to store Tomatoes (and Whether to Refrigerate Them)
            .blog-inner__image 
                img(src="/assets/img/BlogInner-Image.jpg" alt="picture")
            .blog-inner__content 
                h3.heading-tertiary Edit this text to make it your own. To edit, simply click directly on the text.
                p.text Writing UX copies can be a little frustrating and confusing, and sometimes we are unsure about howto get the right word. To crack the code for the UX copies, we at Zeta Design wanted to build a Figma plugin for the larger design community. The plugin is called the Ghost UXWriter and has a set of UX copies cataloged and categorized with a voice and tone variation ranging from plain, casual to playful. The intention to build this Figma plugin originated from our Medium blog post, â€˜Designing voice and tone for error messages.
                p.text Writing UX copies can be a little frustrating and confusing, and sometimes we are unsure about how to get the right word. To crack the code for the UX copies, we at Zeta Design wanted to build a Figma plugin for the larger design community. The plugin is called the Ghost UXWriter and has a set of UX copies cataloged.
                p.text Writing UX copies can be a little frustrating and confusing, and sometimes we are unsure about how to get the right word. To crack the code for the UX copies, we at Zeta Design wanted to build a Figma plugin for the larger design community. The plugin is called the Ghost UXWriter and has a set of UX copies cataloged.
                p.text Writing UX copies can be a little frustrating and confusing, and sometimes we are unsure about howto get the right word. To crack the code for the UX copies, we at Zeta Design wanted to build a Figma plugin for the larger design community. The plugin is called the Ghost UXWriter and has a set of UX copies cataloged and categorized with a voice and tone variation ranging from plain, casual to playful. The intention to build this Figma plugin originated from our Medium blog post, â€˜Designing voice and tone for error messages.
                h5.heading-small Transform Your Idea Into Reality with Ether a Leading Digital Agency
                ul 
                    li.text Step 1: Download the plugin from Figma community, search Ghost UXWriter
                    li.text Step 2: Open the plugin on your artboard
                    li.text Step 3: Search for your copy or look through the different categories of the copies
                    li.text Step 4: Select the type of error you are looking for. You will get three different copies for each error
                    li.text class="text" Step 5: Tap on the cards to insert text in your frames
                p.text And you are all geared up to make your UX copies more fun and exciting ðŸ˜Ž
                h3.heading-tertiary Your own words. You can move the text by dragging and dropping the text anywhere on the page.
                p.text Writing UX copies can be a little frustrating and confusing, and sometimes we are unsure about howto get the right word. To crack the code for the UX copies, we at Zeta Design wanted to build a Figma plugin for the larger design community. The plugin is called the Ghost UXWriter and has a set of UX copies cataloged and categorized with a voice and tone variation ranging from plain, casual to playful. The intention to build this Figma plugin originated from our Medium blog post, â€˜Designing voice and tone for error messages.
        include ../components/map.pug
        include ../components/footer.pug
        script(type='module', src='/script.js')
        script(src='https://unpkg.com/aos@next/dist/aos.js')
        script.
            AOS.init();